<?php
// auto-generated by sfPropelCrud
// date: 2010/06/29 22:13:50
?>
<?php

/**
 * metapd actions.
 *
 * @package    indicadores
 * @subpackage metapd
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class metapdActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('metapd', 'list');
  }

  public function executeList()
  {
    $this->meta_pds = MetaPdPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->meta_pd = MetaPdPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->meta_pd);
  }

  public function executeCreate()
  {
    $this->meta_pd = new MetaPd();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->meta_pd = MetaPdPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->meta_pd);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $meta_pd = new MetaPd();
    }
    else
    {
      $meta_pd = MetaPdPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($meta_pd);
    }

    $meta_pd->setId($this->getRequestParameter('id'));
    $meta_pd->setCodigo($this->getRequestParameter('codigo'));
    $meta_pd->setMeta($this->getRequestParameter('meta'));
    $meta_pd->setDescripcion($this->getRequestParameter('descripcion'));
    $meta_pd->setTipo($this->getRequestParameter('tipo'));

    $meta_pd->save();

    return $this->redirect('metapd/show?id='.$meta_pd->getId());
  }

  public function executeDelete()
  {
    $meta_pd = MetaPdPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($meta_pd);

    $meta_pd->delete();

    return $this->redirect('metapd/list');
  }
}
