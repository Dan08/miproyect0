<?php
// auto-generated by sfPropelCrud
// date: 2010/08/20 03:15:59
?>
<?php

/**
 * componentesector actions.
 *
 * @package    indicadores
 * @subpackage componentesector
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class componentesectorActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('componentesector', 'list');
  }

  public function executeList()
  {
    $this->componente_sectors = ComponenteSectorPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->componente_sector = ComponenteSectorPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->componente_sector);
  }

  public function executeCreate()
  {
    $this->componente_sector = new ComponenteSector();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->componente_sector = ComponenteSectorPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->componente_sector);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $componente_sector = new ComponenteSector();
    }
    else
    {
      $componente_sector = ComponenteSectorPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($componente_sector);
    }

    $componente_sector->setId($this->getRequestParameter('id'));
    $componente_sector->setComponenteSector($this->getRequestParameter('componente_sector'));

    $componente_sector->save();

    return $this->redirect('componentesector/show?id='.$componente_sector->getId());
  }

  public function executeDelete()
  {
    $componente_sector = ComponenteSectorPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($componente_sector);

    $componente_sector->delete();

    return $this->redirect('componentesector/list');
  }
}
