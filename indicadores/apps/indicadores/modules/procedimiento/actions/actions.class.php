<?php
// auto-generated by sfPropelCrud
// date: 2010/09/16 23:20:05
?>
<?php

/**
 * procedimiento actions.
 *
 * @package    indicadores
 * @subpackage procedimiento
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class procedimientoActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('procedimiento', 'list');
  }

  public function executeList()
  {
    $this->procedimientos = ProcedimientoPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->procedimiento = ProcedimientoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->procedimiento);
  }

  public function executeCreate()
  {
    $this->procedimiento = new Procedimiento();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->procedimiento = ProcedimientoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->procedimiento);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $procedimiento = new Procedimiento();
    }
    else
    {
      $procedimiento = ProcedimientoPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($procedimiento);
    }

    $procedimiento->setId($this->getRequestParameter('id'));
    $procedimiento->setProcesoId($this->getRequestParameter('proceso_id') ? $this->getRequestParameter('proceso_id') : null);
    $procedimiento->setNombre($this->getRequestParameter('nombre'));
    $procedimiento->setDescripcion($this->getRequestParameter('descripcion'));

    $procedimiento->save();

    return $this->redirect('procedimiento/show?id='.$procedimiento->getId());
  }

  public function executeDelete()
  {
    $procedimiento = ProcedimientoPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($procedimiento);

    $procedimiento->delete();

    return $this->redirect('procedimiento/list');
  }
}
