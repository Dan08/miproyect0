<?php
// auto-generated by sfPropelCrud
// date: 2010/08/20 03:14:34
?>
<?php

/**
 * componenteproyecto actions.
 *
 * @package    indicadores
 * @subpackage componenteproyecto
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class componenteproyectoActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('componenteproyecto', 'list');
  }

  public function executeList()
  {
    if (!$this->getRequestParameter('proyecto')) {
      $this->setTemplate('BuscarComponente');
    } else {
      $c = new Criteria();
      $c->add(ComponenteProyectoPeer::PROYECTO_ID, $this->getRequestParameter('proyecto'));
      $this->componente_proyectos = ComponenteProyectoPeer::doSelect($c);
    }
  }

  public function executeShow()
  {
    $this->componente_proyecto = ComponenteProyectoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->componente_proyecto);
  }

  public function executeCreate()
  {
    $this->componente_proyecto = new ComponenteProyecto();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->componente_proyecto = ComponenteProyectoPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->componente_proyecto);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $componente_proyecto = new ComponenteProyecto();
    }
    else
    {
      $componente_proyecto = ComponenteProyectoPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($componente_proyecto);
    }

    $componente_proyecto->setId($this->getRequestParameter('id'));
    $componente_proyecto->setComponenteId($this->getRequestParameter('componente_id') ? $this->getRequestParameter('componente_id') : null);
    $componente_proyecto->setProyectoId($this->getRequestParameter('proyecto_id') ? $this->getRequestParameter('proyecto_id') : null);
    $componente_proyecto->setMonto($this->getRequestParameter('monto'));

    $componente_proyecto->save();

    return $this->redirect('componenteproyecto/show?id='.$componente_proyecto->getId());
  }

  public function executeDelete()
  {
    $componente_proyecto = ComponenteProyectoPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($componente_proyecto);

    $componente_proyecto->delete();

    return $this->redirect('componenteproyecto/list');
  }
}
