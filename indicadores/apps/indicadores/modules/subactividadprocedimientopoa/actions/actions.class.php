<?php
// auto-generated by sfPropelCrud
// date: 2010/12/01 01:25:30
?>
<?php

/**
 * subactividadprocedimientopoa actions.
 *
 * @package    indicadores
 * @subpackage subactividadprocedimientopoa
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class subactividadprocedimientopoaActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('subactividadprocedimientopoa', 'list');
  }

  public function executeList()
  {
    $this->subactividad_procedimiento_poas = SubactividadProcedimientoPoaPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->subactividad_procedimiento_poa = SubactividadProcedimientoPoaPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->subactividad_procedimiento_poa);
  }

  public function executeCreate()
  {
    $this->procedimiento = ProcedimientoPoaPeer::doSelect(new Criteria());
    $this->subactividad_procedimiento_poa = new SubactividadProcedimientoPoa();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->procedimiento = ProcedimientoPoaPeer::doSelect(new Criteria());
    $this->subactividad_procedimiento_poa = SubactividadProcedimientoPoaPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->subactividad_procedimiento_poa);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $subactividad_procedimiento_poa = new SubactividadProcedimientoPoa();
    }
    else
    {
      $subactividad_procedimiento_poa = SubactividadProcedimientoPoaPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($subactividad_procedimiento_poa);
    }

    $subactividad_procedimiento_poa->setId($this->getRequestParameter('id'));
    $subactividad_procedimiento_poa->setActividadProcedimientoId($this->getRequestParameter('actividad_procedimiento_id') ? $this->getRequestParameter('actividad_procedimiento_id') : null);
    $subactividad_procedimiento_poa->setDescripcion($this->getRequestParameter('descripcion'));
    $subactividad_procedimiento_poa->setResponsable($this->getRequestParameter('responsable'));
    $subactividad_procedimiento_poa->setEntregable($this->getRequestParameter('entregable'));
    if ($this->getRequestParameter('fecha_inicio'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('fecha_inicio'), $this->getUser()->getCulture());
      $subactividad_procedimiento_poa->setFechaInicio("$y-$m-$d");
    }
    $subactividad_procedimiento_poa->setDuracion($this->getRequestParameter('duracion'));
    $subactividad_procedimiento_poa->setPonderacion($this->getRequestParameter('ponderacion'));

    $subactividad_procedimiento_poa->save();

    return $this->redirect('subactividadprocedimientopoa/show?id='.$subactividad_procedimiento_poa->getId());
  }

  public function executeDelete()
  {
    $subactividad_procedimiento_poa = SubactividadProcedimientoPoaPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($subactividad_procedimiento_poa);

    $subactividad_procedimiento_poa->delete();

    return $this->redirect('subactividadprocedimientopoa/list');
  }
}
