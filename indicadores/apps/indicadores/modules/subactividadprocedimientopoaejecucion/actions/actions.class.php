<?php
// auto-generated by sfPropelCrud
// date: 2010/12/01 01:25:44
?>
<?php

/**
 * subactividadprocedimientopoaejecucion actions.
 *
 * @package    indicadores
 * @subpackage subactividadprocedimientopoaejecucion
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class subactividadprocedimientopoaejecucionActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('subactividadprocedimientopoaejecucion', 'list');
  }

  public function executeList()
  {
    // listar subactividades
    if ($this->getRequestParameter('actividad'))
    {
      $c = new Criteria();
      $c->add(SubactividadProcedimientoPoaPeer::ACTIVIDAD_PROCEDIMIENTO_ID, $this->getRequestParameter('actividad'));
      
      $this->subactividad_procedimiento_poas = SubactividadProcedimientoPoaPeer::doSelect($c);
      $this->setTemplate('listSubActividades');
    // listar actividades
    } elseif ($this->getRequestParameter('procedimiento'))
    {
      $c = new Criteria();
      $c->add(ActividadProcedimientoPoaPeer::PROCEDIMIENTO_POA_ID, $this->getRequestParameter('procedimiento'));
      $this->actividad_procedimiento_poas = ActividadProcedimientoPoaPeer::doSelect($c);
      $this->setTemplate('listActividades');

    // listar procedimientos
    } else {
      $this->procedimiento_poas = ProcedimientoPoaPeer::doSelect(new Criteria());
      $this->setTemplate('listProcedimientos');
    }
  }

  public function executeShow()
  {
    $this->subactividad_procedimiento_poa_ejecucion = SubactividadProcedimientoPoaEjecucionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->subactividad_procedimiento_poa_ejecucion);
  }

  public function executeCreate()
  {
    // tomar el identificador de la subactividad
    $this->id = $this->getRequestParameter('subactividad');
    // consultar el numero de mediciones que existen
    $this->subactividad = SubactividadProcedimientoPoaPeer::retrieveByPK($this->id);
    $this->subactividad_procedimiento_poa_ejecucion = new SubactividadProcedimientoPoaEjecucion();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->subactividad_procedimiento_poa_ejecucion = SubactividadProcedimientoPoaEjecucionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->subactividad_procedimiento_poa_ejecucion);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $subactividad_procedimiento_poa_ejecucion = new SubactividadProcedimientoPoaEjecucion();
    }
    else
    {
      $subactividad_procedimiento_poa_ejecucion = SubactividadProcedimientoPoaEjecucionPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($subactividad_procedimiento_poa_ejecucion);
    }

    $subactividad_procedimiento_poa_ejecucion->setId($this->getRequestParameter('id'));
    $subactividad_procedimiento_poa_ejecucion->setSubactividadPoaId($this->getRequestParameter('subactividad_poa_id') ? $this->getRequestParameter('subactividad_poa_id') : null);
    $subactividad_procedimiento_poa_ejecucion->setMes($this->getRequestParameter('mes'));
    $subactividad_procedimiento_poa_ejecucion->setDescripcion($this->getRequestParameter('descripcion'));
    $subactividad_procedimiento_poa_ejecucion->setAvance($this->getRequestParameter('avance'));

    $subactividad_procedimiento_poa_ejecucion->save();

    return $this->redirect('subactividadprocedimientopoaejecucion/show?id='.$subactividad_procedimiento_poa_ejecucion->getId());
  }

  public function executeDelete()
  {
    $subactividad_procedimiento_poa_ejecucion = SubactividadProcedimientoPoaEjecucionPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($subactividad_procedimiento_poa_ejecucion);

    $subactividad_procedimiento_poa_ejecucion->delete();

    return $this->redirect('subactividadprocedimientopoaejecucion/list');
  }
}
