<?php
// auto-generated by sfPropelCrud
// date: 2010/06/29 22:24:39
?>
<?php

/**
 * fuente actions.
 *
 * @package    indicadores
 * @subpackage fuente
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class fuenteActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('fuente', 'list');
  }

  public function executeList()
  {
    $this->fuentes = FuentePeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->fuente = FuentePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->fuente);
  }

  public function executeCreate()
  {
    $this->fuente = new Fuente();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->fuente = FuentePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->fuente);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $fuente = new Fuente();
    }
    else
    {
      $fuente = FuentePeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($fuente);
    }

    $fuente->setId($this->getRequestParameter('id'));
    $fuente->setCodigo($this->getRequestParameter('codigo'));
    $fuente->setFuente($this->getRequestParameter('fuente'));

    $fuente->save();

    return $this->redirect('fuente/show?id='.$fuente->getId());
  }

  public function executeDelete()
  {
    $fuente = FuentePeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($fuente);

    $fuente->delete();

    return $this->redirect('fuente/list');
  }
}
