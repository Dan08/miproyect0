<?php
// auto-generated by sfPropelCrud
// date: 2010/08/20 03:13:25
?>
<?php

/**
 * localidadactividad actions.
 *
 * @package    indicadores
 * @subpackage localidadactividad
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class localidadactividadActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('localidadactividad', 'list');
  }

  public function executeList()
  {
    // listar las fuentes de la actividad seleccionada
    if($this->getRequestParameter('actividad')) {
      $c = new Criteria();
      $c->add(LocalidadActividadPeer::ACTIVIDAD_ID, $this->getRequestParameter('actividad'));

      $this->localidad_actividads = LocalidadActividadPeer::doSelect($c);

    // mostrar la lista de actividades correspondiente al proyecto y mes
    } elseif (($this->getRequestParameter('proyecto')) && ($this->getRequestParameter('mes'))) {
      $c = new Criteria();
      $c->add(ActividadPeer::PROYECTO_ID, $this->getRequestParameter('proyecto'));
      $c->add(ActividadPeer::MES_INICIO_EJECUCION, $this->getRequestParameter('mes'));

      $this->actividads = ActividadPeer::doSelect($c);

      $this->setTemplate('ListActividades');
    // mostrar formulario de busqueda de actividad
    } else {
      $this->setTemplate('BuscarActividad');
    }
  }

  public function executeShow()
  {
    $this->localidad_actividad = LocalidadActividadPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->localidad_actividad);
  }

  public function executeCreate()
  {
    if($this->getRequestParameter('actividad')) {
      $this->localidad_actividad = new LocalidadActividad();
      $this->actividad = ActividadPeer::retrieveByPK($this->getRequestParameter('actividad'));

      $this->setTemplate('edit');

    } elseif (($this->getRequestParameter('proyecto')) && ($this->getRequestParameter('mes'))) {
      $c = new Criteria();
      $c->add(ActividadPeer::PROYECTO_ID, $this->getRequestParameter('proyecto'));
      $c->add(ActividadPeer::MES_INICIO_EJECUCION, $this->getRequestParameter('mes'));

      $this->actividads = ActividadPeer::doSelect($c);

      $this->setTemplate('ListActividadesCreate');
    // mostrar formulario de busqueda de actividad
    } else {
      $this->setTemplate('BuscarActividadCreate');

    }
  }

  public function executeEdit()
  {
    $this->localidad_actividad = LocalidadActividadPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->actividad = ActividadPeer::retrieveByPK($this->getRequestParameter('actividad'));
    $this->forward404Unless($this->localidad_actividad);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $localidad_actividad = new LocalidadActividad();
    }
    else
    {
      $localidad_actividad = LocalidadActividadPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($localidad_actividad);
    }

    $localidad_actividad->setId($this->getRequestParameter('id'));
    $localidad_actividad->setLocalidadId($this->getRequestParameter('localidad_id') ? $this->getRequestParameter('localidad_id') : null);
    $localidad_actividad->setActividadId($this->getRequestParameter('actividad_id') ? $this->getRequestParameter('actividad_id') : null);
    $localidad_actividad->setMonto($this->getRequestParameter('monto'));
    $localidad_actividad->setCantidad($this->getRequestParameter('cantidad'));

    $localidad_actividad->save();

    return $this->redirect('localidadactividad/show?id='.$localidad_actividad->getId());
  }

  public function executeDelete()
  {
    $localidad_actividad = LocalidadActividadPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($localidad_actividad);

    $localidad_actividad->delete();

    return $this->redirect('localidadactividad/list');
  }
}
